crime_data$iccs <- NA
crime_data$unit <- NA
crime_data$country <- NA
for (i in 1:nrow(crime_data)){
# crime_data$freq[i] <- str_split_first_col[[i]][1] # freq only has possible value "A"
crime_data$iccs[i] <- str_split_first_col[[i]][2]
crime_data$unit[i] <- str_split_first_col[[i]][3]
crime_data$country[i] <- str_split_first_col[[i]][4]
}
crime_data <- select(crime_data, -id_vars) %>%
relocate(iccs, .before='2008') %>%
relocate(unit, after=iccs) %>%
relocate(country, after=iccs)
# ony take rates / 100.000 and drop num variable
crime_data <- filter(crime_data, unit=="P_HTHAB") %>%
select(-unit)
# transform iccs to crime
iccs_to_crime <- cbind(paste0("ICCS",c("0101","0102","02011","020221","0301","03011","03012",
"0401","0501","05012","0502","050211","0601")),
c("intentional_homicide_1","attempted_intentional_homicide_1",
"assault_2","kidnapping_2","sexual_violence_3","rape_3","sexual_assault_3",
"robbery_4","burglary_5","burgraly_private_residence_5",
"theft_5","theft_motor_cycle_5","drugs_6"))
.fun_iccs_to_crime <- function(x,crime_vector){
return(crime_vector[x])
}
index_iccs <- match(crime_data$iccs, iccs_to_crime[,1])
crime_data$type_of_crime <- unlist(lapply(index_iccs,.fun_iccs_to_crime, crime_vector=iccs_to_crime[,2]))
main_crimes <-  c("intentional_homicide_1",
"assault_2","sexual_violence_3",
"robbery_4","burglary_5",
"theft_5","drugs_6")
# change years from wide to long
crime_data <- pivot_longer(crime_data, cols = c("2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018"),
names_to = "year")
# change crime from long to wide
crime_data <- pivot_wider(crime_data,id_cols = c("country","unit","year"),names_from = "type_of_crime",values_from = "value")
summary(crime_data)
summary(is.na(crime_data))
# create crime growth rates
# idea for creating a crime index:
# check for missing values & create subset with no NAs for main_crimes
summary(!is.na(crime_data$intentional_homicide_1) & !is.na(crime_data$assault_2) & !is.na(crime_data$rape_3) & !is.na(crime_data$robbery_4) & !is.na(crime_data$burglary_5) &  !is.na(crime_data$theft_5) & !is.na(crime_data$drugs_6))
crime_data_no_na_main_crimes <- crime_data[!is.na(crime_data$intentional_homicide_1) & !is.na(crime_data$assault_2) & !is.na(crime_data$rape_3) & !is.na(crime_data$robbery_4) & !is.na(crime_data$burglary_5) &  !is.na(crime_data$theft_5) & !is.na(crime_data$drugs_6),]
table(crime_data$country)
table(crime_data_subsample$country)
#### 3) Descriptives Crime ####
ggplot(data=crime_data, aes(x=year,y=intentional_homicide_1)) +
geom_line(aes(color=country))
##### Preamble ####
## librarys
library(readr)
library(zoo)
library(stats)
library(TSPred)
library(forecast)
library(lubridate)
library(data.table)
library(tidyverse)
library(hdm)
library(GGally)
library(ggcorrplot)
library(xtable)
library(fastDummies)
library(pcaMethods) # different pca-methods to deal with missing values
## functions
filter <- dplyr::filter
select <- dplyr::select
ggpairs <- GGally::ggpairs
ggcorrplot <- ggcorrplot::ggcorrplot
## paths
setwd("D:/GitHub/crime_on_gdp") # setwd
outpath <- "./output/" # output
plots <- "./output/plots/"
tables <- "./output/tables/"
datapath <- "./data/" # data files (input datafile from package)
####  1) Import Data ####
# crime data (parsing errors are transformation of ; to NA)
crime_data_original <- read_csv("data/crim_off_cat__custom_128689_20201028_155532.csv",
col_types = cols(`2008` = col_number(),
`2009` = col_number(), `2010` = col_number(),
`2011` = col_number(), `2012` = col_number(),
`2013` = col_number(), `2014` = col_number(),
`2015` = col_number(), `2016` = col_number(),
`2017` = col_number(), `2018` = col_number()))
# controls
#### 2) Preprocessing Crime Data ####
crime_data <- crime_data_original
colnames(crime_data)[1] <- c("id_vars")
# Split first variable string
str_split_first_col <- str_split(crime_data$id_vars,";",simplify=FALSE)
# crime_data$freq <- NA # freq only has possible value "A"
crime_data$iccs <- NA
crime_data$unit <- NA
crime_data$country <- NA
for (i in 1:nrow(crime_data)){
# crime_data$freq[i] <- str_split_first_col[[i]][1] # freq only has possible value "A"
crime_data$iccs[i] <- str_split_first_col[[i]][2]
crime_data$unit[i] <- str_split_first_col[[i]][3]
crime_data$country[i] <- str_split_first_col[[i]][4]
}
crime_data <- select(crime_data, -id_vars) %>%
relocate(iccs, .before='2008') %>%
relocate(unit, after=iccs) %>%
relocate(country, after=iccs)
# ony take rates / 100.000 and drop num variable
crime_data <- filter(crime_data, unit=="P_HTHAB") %>%
select(-unit)
# transform iccs to crime
iccs_to_crime <- cbind(paste0("ICCS",c("0101","0102","02011","020221","0301","03011","03012",
"0401","0501","05012","0502","050211","0601")),
c("intentional_homicide_1","attempted_intentional_homicide_1",
"assault_2","kidnapping_2","sexual_violence_3","rape_3","sexual_assault_3",
"robbery_4","burglary_5","burgraly_private_residence_5",
"theft_5","theft_motor_cycle_5","drugs_6"))
.fun_iccs_to_crime <- function(x,crime_vector){
return(crime_vector[x])
}
index_iccs <- match(crime_data$iccs, iccs_to_crime[,1])
crime_data$type_of_crime <- unlist(lapply(index_iccs,.fun_iccs_to_crime, crime_vector=iccs_to_crime[,2]))
main_crimes <-  c("intentional_homicide_1",
"assault_2","sexual_violence_3",
"robbery_4","burglary_5",
"theft_5","drugs_6")
# change years from wide to long
crime_data <- pivot_longer(crime_data, cols = c("2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018"),
names_to = "year")
# change crime from long to wide
crime_data <- pivot_wider(crime_data,id_cols = c("country","unit","year"),names_from = "type_of_crime",values_from = "value")
summary(crime_data)
summary(is.na(crime_data))
# create crime growth rates
# idea for creating a crime index:
# check for missing values & create subset with no NAs for main_crimes
summary(!is.na(crime_data$intentional_homicide_1) & !is.na(crime_data$assault_2) & !is.na(crime_data$rape_3) & !is.na(crime_data$robbery_4) & !is.na(crime_data$burglary_5) &  !is.na(crime_data$theft_5) & !is.na(crime_data$drugs_6))
crime_data_no_na_main_crimes <- crime_data[!is.na(crime_data$intentional_homicide_1) & !is.na(crime_data$assault_2) & !is.na(crime_data$rape_3) & !is.na(crime_data$robbery_4) & !is.na(crime_data$burglary_5) &  !is.na(crime_data$theft_5) & !is.na(crime_data$drugs_6),]
table(crime_data$country)
table(crime_data_subsample$country)
#### 3) Descriptives Crime ####
ggplot(data=crime_data, aes(x=year,y=intentional_homicide_1)) +
geom_line(aes(color=country))
##### Preamble ####
## librarys
library(readr)
library(zoo)
library(stats)
library(TSPred)
library(forecast)
library(lubridate)
library(data.table)
library(tidyverse)
library(hdm)
library(GGally)
library(ggcorrplot)
library(xtable)
library(fastDummies)
library(pcaMethods) # different pca-methods to deal with missing values
## functions
filter <- dplyr::filter
select <- dplyr::select
ggpairs <- GGally::ggpairs
ggcorrplot <- ggcorrplot::ggcorrplot
## paths
setwd("D:/GitHub/crime_on_gdp") # setwd
outpath <- "./output/" # output
plots <- "./output/plots/"
tables <- "./output/tables/"
datapath <- "./data/" # data files (input datafile from package)
####  1) Import Data ####
# crime data (parsing errors are transformation of ; to NA)
crime_data_original <- read_csv("data/crim_off_cat__custom_128689_20201028_155532.csv",
col_types = cols(`2008` = col_number(),
`2009` = col_number(), `2010` = col_number(),
`2011` = col_number(), `2012` = col_number(),
`2013` = col_number(), `2014` = col_number(),
`2015` = col_number(), `2016` = col_number(),
`2017` = col_number(), `2018` = col_number()))
# controls
#### 2) Preprocessing Crime Data ####
crime_data <- crime_data_original
colnames(crime_data)[1] <- c("id_vars")
# Split first variable string
str_split_first_col <- str_split(crime_data$id_vars,";",simplify=FALSE)
# crime_data$freq <- NA # freq only has possible value "A"
crime_data$iccs <- NA
crime_data$unit <- NA
crime_data$country <- NA
for (i in 1:nrow(crime_data)){
# crime_data$freq[i] <- str_split_first_col[[i]][1] # freq only has possible value "A"
crime_data$iccs[i] <- str_split_first_col[[i]][2]
crime_data$unit[i] <- str_split_first_col[[i]][3]
crime_data$country[i] <- str_split_first_col[[i]][4]
}
crime_data <- select(crime_data, -id_vars) %>%
relocate(iccs, .before='2008') %>%
relocate(unit, after=iccs) %>%
relocate(country, after=iccs)
# ony take rates / 100.000 and drop num variable
crime_data <- filter(crime_data, unit=="P_HTHAB") %>%
select(-unit)
View(crime_data)
# transform iccs to crime
iccs_to_crime <- cbind(paste0("ICCS",c("0101","0102","02011","020221","0301","03011","03012",
"0401","0501","05012","0502","050211","0601")),
c("intentional_homicide_1","attempted_intentional_homicide_1",
"assault_2","kidnapping_2","sexual_violence_3","rape_3","sexual_assault_3",
"robbery_4","burglary_5","burgraly_private_residence_5",
"theft_5","theft_motor_cycle_5","drugs_6"))
.fun_iccs_to_crime <- function(x,crime_vector){
return(crime_vector[x])
}
index_iccs <- match(crime_data$iccs, iccs_to_crime[,1])
crime_data$type_of_crime <- unlist(lapply(index_iccs,.fun_iccs_to_crime, crime_vector=iccs_to_crime[,2]))
### Project: Effect of Crime on GDP-Growth - Criminology, HSG
##### Preamble ####
## librarys
library(readr)
library(zoo)
library(stats)
library(TSPred)
library(forecast)
library(lubridate)
library(data.table)
library(tidyverse)
library(hdm)
library(GGally)
library(ggcorrplot)
library(xtable)
library(fastDummies)
library(pcaMethods) # different pca-methods to deal with missing values
## functions
filter <- dplyr::filter
select <- dplyr::select
ggpairs <- GGally::ggpairs
ggcorrplot <- ggcorrplot::ggcorrplot
## paths
setwd("D:/GitHub/crime_on_gdp") # setwd
outpath <- "./output/" # output
plots <- "./output/plots/"
tables <- "./output/tables/"
datapath <- "./data/" # data files (input datafile from package)
####  1) Import Data ####
# crime data (parsing errors are transformation of ; to NA)
crime_data_original <- read_csv("data/crim_off_cat__custom_128689_20201028_155532.csv",
col_types = cols(`2008` = col_number(),
`2009` = col_number(), `2010` = col_number(),
`2011` = col_number(), `2012` = col_number(),
`2013` = col_number(), `2014` = col_number(),
`2015` = col_number(), `2016` = col_number(),
`2017` = col_number(), `2018` = col_number()))
# controls
#### 2) Preprocessing Crime Data ####
crime_data <- crime_data_original
colnames(crime_data)[1] <- c("id_vars")
# Split first variable string
str_split_first_col <- str_split(crime_data$id_vars,";",simplify=FALSE)
# crime_data$freq <- NA # freq only has possible value "A"
crime_data$iccs <- NA
crime_data$unit <- NA
crime_data$country <- NA
for (i in 1:nrow(crime_data)){
# crime_data$freq[i] <- str_split_first_col[[i]][1] # freq only has possible value "A"
crime_data$iccs[i] <- str_split_first_col[[i]][2]
crime_data$unit[i] <- str_split_first_col[[i]][3]
crime_data$country[i] <- str_split_first_col[[i]][4]
}
crime_data <- select(crime_data, -id_vars) %>%
relocate(iccs, .before='2008') %>%
relocate(unit, after=iccs) %>%
relocate(country, after=iccs)
# ony take rates / 100.000 and drop num variable
crime_data <- filter(crime_data, unit=="P_HTHAB") %>%
select(-unit)
# transform iccs to crime
iccs_to_crime <- cbind(paste0("ICCS",c("0101","0102","02011","020221","0301","03011","03012",
"0401","0501","05012","0502","050211","0601")),
c("intentional_homicide_1","attempted_intentional_homicide_1",
"assault_2","kidnapping_2","sexual_violence_3","rape_3","sexual_assault_3",
"robbery_4","burglary_5","burgraly_private_residence_5",
"theft_5","theft_motor_cycle_5","drugs_6"))
.fun_iccs_to_crime <- function(x,crime_vector){
return(crime_vector[x])
}
index_iccs <- match(crime_data$iccs, iccs_to_crime[,1])
crime_data$type_of_crime <- unlist(lapply(index_iccs,.fun_iccs_to_crime, crime_vector=iccs_to_crime[,2]))
main_crimes <-  c("intentional_homicide_1",
"assault_2","sexual_violence_3",
"robbery_4","burglary_5",
"theft_5","drugs_6")
# change years from wide to long
crime_data <- pivot_longer(crime_data, cols = c("2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018"),
names_to = "year")
# change crime from long to wide
crime_data <- pivot_wider(crime_data,id_cols = c("country","year"),names_from = "type_of_crime",values_from = "value")
summary(crime_data)
summary(is.na(crime_data))
# check for missing values & create subset with no NAs for main_crimes
summary(!is.na(crime_data$intentional_homicide_1) & !is.na(crime_data$assault_2) & !is.na(crime_data$rape_3) & !is.na(crime_data$robbery_4) & !is.na(crime_data$burglary_5) &  !is.na(crime_data$theft_5) & !is.na(crime_data$drugs_6))
crime_data_no_na_main_crimes <- crime_data[!is.na(crime_data$intentional_homicide_1) & !is.na(crime_data$assault_2) & !is.na(crime_data$rape_3) & !is.na(crime_data$robbery_4) & !is.na(crime_data$burglary_5) &  !is.na(crime_data$theft_5) & !is.na(crime_data$drugs_6),]
table(crime_data$country)
table(crime_data_subsample$country)
#### 3) Descriptives Crime ####
ggplot(data=crime_data, aes(x=year,y=intentional_homicide_1)) +
geom_line(aes(color=country))
### Project: Effect of Crime on GDP-Growth - Criminology, HSG
##### Preamble ####
## librarys
library(readr)
library(zoo)
library(stats)
library(TSPred)
library(forecast)
library(lubridate)
library(data.table)
library(tidyverse)
library(hdm)
library(GGally)
library(ggcorrplot)
library(xtable)
library(fastDummies)
library(pcaMethods) # different pca-methods to deal with missing values
## functions
filter <- dplyr::filter
select <- dplyr::select
ggpairs <- GGally::ggpairs
ggcorrplot <- ggcorrplot::ggcorrplot
## paths
setwd("D:/GitHub/crime_on_gdp") # setwd
outpath <- "./output/" # output
plots <- "./output/plots/"
tables <- "./output/tables/"
datapath <- "./data/" # data files (input datafile from package)
####  1) Import Data ####
# crime data (parsing errors are transformation of ; to NA)
crime_data_original <- read_csv("data/crim_off_cat__custom_128689_20201028_155532.csv",
col_types = cols(`2008` = col_number(),
`2009` = col_number(), `2010` = col_number(),
`2011` = col_number(), `2012` = col_number(),
`2013` = col_number(), `2014` = col_number(),
`2015` = col_number(), `2016` = col_number(),
`2017` = col_number(), `2018` = col_number()))
# controls
#### 2) Preprocessing Crime Data ####
crime_data <- crime_data_original
colnames(crime_data)[1] <- c("id_vars")
# Split first variable string
str_split_first_col <- str_split(crime_data$id_vars,";",simplify=FALSE)
# crime_data$freq <- NA # freq only has possible value "A"
crime_data$iccs <- NA
crime_data$unit <- NA
crime_data$country <- NA
for (i in 1:nrow(crime_data)){
# crime_data$freq[i] <- str_split_first_col[[i]][1] # freq only has possible value "A"
crime_data$iccs[i] <- str_split_first_col[[i]][2]
crime_data$unit[i] <- str_split_first_col[[i]][3]
crime_data$country[i] <- str_split_first_col[[i]][4]
}
crime_data <- select(crime_data, -id_vars) %>%
relocate(iccs, .before='2008') %>%
relocate(unit, after=iccs) %>%
relocate(country, after=iccs)
# ony take rates / 100.000 and drop num variable
crime_data <- filter(crime_data, unit=="P_HTHAB") %>%
select(-unit)
# transform iccs to crime
iccs_to_crime <- cbind(paste0("ICCS",c("0101","0102","02011","020221","0301","03011","03012",
"0401","0501","05012","0502","050211","0601")),
c("intentional_homicide_1","attempted_intentional_homicide_1",
"assault_2","kidnapping_2","sexual_violence_3","rape_3","sexual_assault_3",
"robbery_4","burglary_5","burgraly_private_residence_5",
"theft_5","theft_motor_cycle_5","drugs_6"))
.fun_iccs_to_crime <- function(x,crime_vector){
return(crime_vector[x])
}
index_iccs <- match(crime_data$iccs, iccs_to_crime[,1])
crime_data$type_of_crime <- unlist(lapply(index_iccs,.fun_iccs_to_crime, crime_vector=iccs_to_crime[,2]))
main_crimes <-  c("intentional_homicide_1",
"assault_2","sexual_violence_3",
"robbery_4","burglary_5",
"theft_5","drugs_6")
# change years from wide to long
crime_data <- pivot_longer(crime_data, cols = c("2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018"),
names_to = "year")
# change crime from long to wide
crime_data <- pivot_wider(crime_data,id_cols = c("country","year"),names_from = "type_of_crime",values_from = "value")
summary(crime_data)
summary(is.na(crime_data))
# check for missing values & create subset with no NAs for main_crimes
summary(!is.na(crime_data$intentional_homicide_1) & !is.na(crime_data$assault_2) & !is.na(crime_data$rape_3) & !is.na(crime_data$robbery_4) & !is.na(crime_data$burglary_5) &  !is.na(crime_data$theft_5) & !is.na(crime_data$drugs_6))
crime_data_no_na_main_crimes <- crime_data[!is.na(crime_data$intentional_homicide_1) & !is.na(crime_data$assault_2) & !is.na(crime_data$rape_3) & !is.na(crime_data$robbery_4) & !is.na(crime_data$burglary_5) &  !is.na(crime_data$theft_5) & !is.na(crime_data$drugs_6),]
table(crime_data$country)
table(crime_data_subsample$country)
table(crime_data_no_na_main_crimes$country)
#### 3) Descriptives Crime ####
ggplot(data=crime_data, aes(x=year,y=intentional_homicide_1)) +
geom_line(aes(color=country))
View(crime_data)
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, color=country))
colnames(crime_data)
#### 3) Descriptives Crime ####
ggplot(data=crime_data_no_na_main_crimes) +
geom_line(aes(x=year,y=intentional_homicide_1, color=country))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_point(aes(x=year,y=intentional_homicide_1))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_point(aes(x=year,y=intentional_homicide_1, color=country))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, color=country))
geom_line(aes(x=year,y=intentional_homicide_1, linetype = as.factor(country))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, linetype = as.factor(country)))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, linetype = as.factor(country)))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, color = as.factor(country)))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, grou = as.factor(country)))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country)))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))
#### 3) Descriptives Crime ####
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("intentional_homicide_1")
warnings()
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("intentional_homicide_1")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("assault_2")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("sexual_violence_3")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("robbery_4")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("burglary_5")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("theft_5")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("drugs_6")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=intentional_homicide_1, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("intentional_homicide_1")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=assault_2, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("assault_2")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=sexual_violence_3, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("sexual_violence_3")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=robbery_4, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("robbery_4")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=burglary_5, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("burglary_5")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=theft_5, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("theft_5")
ggplot(data=crime_data) +
geom_line(aes(x=year,y=drugs_6, group = as.factor(country),color = country))+
theme_bw()+
theme(legend.position = "bottom", legend.box.background = element_rect(colour = "black"))+
ggtitle("drugs_6")
